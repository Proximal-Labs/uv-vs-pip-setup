{
  "duration": 16.92,
  "score": 3,
  "total": 13,
  "passed_tasks": [
    "convert_xlsx_to_csv",
    "olympic_data_analysis",
    "spell_checker"
  ],
  "failed_tasks": [
    "audiobook",
    "earth",
    "fastapi_crud",
    "get_link",
    "image_resizing",
    "logistic_regression",
    "make_art",
    "markdown_to_html",
    "sudoku",
    "todo_app"
  ],
  "results": [
    {
      "task": "audiobook",
      "passed": false,
      "agent": {
        "rc": 0,
        "dur": 88.26
      },
      "command_checks": {
        "ok": true,
        "score": 4,
        "max": 4,
        "hits": {
          "venv_created": true,
          "installed_in_venv": true,
          "no_global_pip": true,
          "used_tool_commands": true,
          "used_uv_commands": true
        },
        "violations": [],
        "cmds": [
          "pwd && ls -la",
          "ls -la pyproject.toml",
          "uv sync --virtualenv .venv",
          "uv sync --help",
          "ls -la .venv",
          "python3 -m venv .venv && source .venv/bin/activate && pip install --no-cache-dir -r <(uv pip list --output-format=text)",
          "uv pip --help",
          "uv pip install --no-cache-dir gTTS PyPDF2 --target .venv/lib/python3.12/site-packages",
          ".venv/bin/python audiobook.py",
          "ps aux | grep audiobook && ls -la *.mp3",
          "ls -la audiobook.mp3",
          "C-c",
          "ls -la audiobook.mp3"
        ],
        "manifest": {
          "ok": false,
          "required": [
            "gtts",
            "PyPDF2"
          ],
          "present": [],
          "missing": [
            "gtts",
            "PyPDF2"
          ],
          "used_pyproject": true,
          "parse_error": true,
          "error": "Invalid initial character for a key part (at line 11, column 2)",
          "preview": [
            "",
            "[project]",
            "name = \"audiobook-converter\"",
            "version = \"0.1.0\"",
            "description = \"Convert PDF books to audiobooks\""
          ]
        }
      },
      "manifest_ok": false,
      "env_checks": {
        "required": 2,
        "passed": 2,
        "used_venv": true
      },
      "grade_rc": 0,
      "task_duration": 1.98
    },
    {
      "task": "convert_xlsx_to_csv",
      "passed": true,
      "agent": {
        "rc": 0,
        "dur": 39.0
      },
      "command_checks": {
        "ok": true,
        "score": 4,
        "max": 4,
        "hits": {
          "venv_created": true,
          "installed_in_venv": true,
          "no_global_pip": true,
          "used_tool_commands": true,
          "used_uv_commands": true
        },
        "violations": [],
        "cmds": [
          "pwd && ls -la",
          "uv sync --python .venv/bin/python",
          "python3 -m venv .venv",
          "uv sync --python .venv/bin/python",
          "python3 -m venv .venv && uv sync --python .venv/bin/python"
        ],
        "manifest": {
          "ok": true,
          "required": [
            "pandas"
          ],
          "present": [
            "pandas"
          ],
          "missing": [],
          "used_pyproject": true
        }
      },
      "manifest_ok": true,
      "env_checks": {
        "required": 1,
        "passed": 1,
        "used_venv": true
      },
      "grade_rc": 0,
      "task_duration": 0.77
    },
    {
      "task": "earth",
      "passed": false,
      "agent": {
        "rc": 0,
        "dur": 99.0
      },
      "command_checks": {
        "ok": true,
        "score": 4,
        "max": 4,
        "hits": {
          "venv_created": true,
          "installed_in_venv": true,
          "no_global_pip": true,
          "used_tool_commands": true,
          "used_uv_commands": true
        },
        "violations": [],
        "cmds": [
          "pwd && ls -la",
          "cat example1.py",
          "ls -la earth/",
          "cat earth/__init__.py",
          "cat earth/adventurers.py",
          "grep -r \"import\" earth/ | grep -v \"from .\"",
          "uv venv",
          "source .venv/bin/activate",
          "uv install -e .venv",
          "uv venv && source .venv/bin/activate && uv install -e .venv",
          "uv venv && source .venv/bin/activate && uv pip install -e .venv",
          "C-c",
          "uv venv --clear && source .venv/bin/activate && uv pip install -e .venv",
          "uv venv --clear && source .venv/bin/activate && uv pip install -e .",
          ".venv/bin/python example1.py"
        ],
        "manifest": {
          "ok": true,
          "required": [
            "attrs"
          ],
          "present": [
            "attrs"
          ],
          "missing": [],
          "used_pyproject": true
        }
      },
      "manifest_ok": true,
      "env_checks": {
        "required": 1,
        "passed": 1,
        "used_venv": true
      },
      "grade_rc": 1,
      "task_duration": 1.74
    },
    {
      "task": "fastapi_crud",
      "passed": false,
      "agent": {
        "rc": 0,
        "dur": 80.93
      },
      "command_checks": {
        "ok": true,
        "score": 4,
        "max": 4,
        "hits": {
          "venv_created": true,
          "installed_in_venv": true,
          "no_global_pip": true,
          "used_tool_commands": true,
          "used_uv_commands": true
        },
        "violations": [],
        "cmds": [
          "pwd && ls -la",
          "ls -la | grep pyproject.toml",
          "uv sync"
        ],
        "manifest": {
          "ok": false,
          "required": [
            "fastapi",
            "pydantic",
            "uvicorn",
            "sqlalchemy"
          ],
          "present": [],
          "missing": [
            "fastapi",
            "pydantic",
            "uvicorn",
            "sqlalchemy"
          ],
          "used_pyproject": true,
          "parse_error": true,
          "error": "Invalid value (at line 13, column 17)",
          "preview": [
            "",
            "[project]",
            "name = \"my-project\"",
            "version = \"0.1.0\"",
            "description = \"A sample Python project\""
          ]
        }
      },
      "manifest_ok": false,
      "env_checks": {
        "required": 4,
        "passed": 0,
        "used_venv": false
      },
      "grade_rc": 1,
      "task_duration": 1.49
    },
    {
      "task": "get_link",
      "passed": false,
      "agent": {
        "rc": 0,
        "dur": 43.33
      },
      "command_checks": {
        "ok": true,
        "score": 4,
        "max": 4,
        "hits": {
          "venv_created": true,
          "installed_in_venv": true,
          "no_global_pip": true,
          "used_tool_commands": true,
          "used_uv_commands": true
        },
        "violations": [],
        "cmds": [
          "ls -la",
          "uv --version",
          "python -m venv .venv",
          "uv sync --python .venv/bin/python"
        ],
        "manifest": {
          "ok": false,
          "required": [
            "requests",
            "beautifulsoup4"
          ],
          "present": [],
          "missing": [
            "requests",
            "beautifulsoup4"
          ],
          "used_pyproject": true
        }
      },
      "manifest_ok": false,
      "env_checks": {
        "required": 2,
        "passed": 0,
        "used_venv": true
      },
      "grade_rc": 1,
      "task_duration": 0.83
    },
    {
      "task": "image_resizing",
      "passed": false,
      "agent": {
        "rc": 0,
        "dur": 40.0
      },
      "command_checks": {
        "ok": true,
        "score": 4,
        "max": 4,
        "hits": {
          "venv_created": true,
          "installed_in_venv": true,
          "no_global_pip": true,
          "used_tool_commands": true,
          "used_uv_commands": true
        },
        "violations": [],
        "cmds": [
          "pwd && ls",
          "uv venv && uv pip install -e ."
        ],
        "manifest": {
          "ok": true,
          "required": [
            "Pillow"
          ],
          "present": [
            "Pillow"
          ],
          "missing": [],
          "used_pyproject": true
        }
      },
      "manifest_ok": true,
      "env_checks": {
        "required": 1,
        "passed": 0,
        "used_venv": true
      },
      "grade_rc": 1,
      "task_duration": 0.76
    },
    {
      "task": "logistic_regression",
      "passed": false,
      "agent": {
        "rc": 0,
        "dur": 56.99
      },
      "command_checks": {
        "ok": true,
        "score": 4,
        "max": 4,
        "hits": {
          "venv_created": true,
          "installed_in_venv": true,
          "no_global_pip": true,
          "used_tool_commands": true,
          "used_uv_commands": true
        },
        "violations": [],
        "cmds": [
          "pwd && ls -la",
          "ls -la | grep pyproject.toml",
          "uv sync",
          "cat pyproject.toml",
          "uv sync",
          "ls -la .venv/bin/python"
        ],
        "manifest": {
          "ok": false,
          "required": [
            "pandas",
            "numpy",
            "matplotlib",
            "seaborn",
            "scikit-learn"
          ],
          "present": [
            "pandas",
            "numpy",
            "matplotlib",
            "scikit-learn"
          ],
          "missing": [
            "seaborn"
          ],
          "used_pyproject": true
        }
      },
      "manifest_ok": false,
      "env_checks": {
        "required": 5,
        "passed": 3,
        "used_venv": true
      },
      "grade_rc": 1,
      "task_duration": 1.14
    },
    {
      "task": "make_art",
      "passed": false,
      "agent": {
        "rc": 0,
        "dur": 87.06
      },
      "command_checks": {
        "ok": true,
        "score": 4,
        "max": 4,
        "hits": {
          "venv_created": true,
          "installed_in_venv": true,
          "no_global_pip": true,
          "used_tool_commands": true,
          "used_uv_commands": true
        },
        "violations": [],
        "cmds": [
          "pwd && ls -la",
          "find /workspace -type f -name \"requirements.txt\" -o -name \"Pipfile\" -o -name \"poetry.lock\"",
          "python -m venv .venv",
          "source .venv/bin/activate",
          "uv pip install --editable .",
          "python -m venv .venv && source .venv/bin/activate && uv pip install --editable .",
          "python -m venv .venv && source .venv/bin/activate && pip install uv && uv pip install --editable .",
          "python -m venv .venv && source .venv/bin/activate && pip install uv && uv pip install .",
          "python -m venv .venv && source .venv/bin/activate && pip install -e .",
          "python -m venv .venv && source .venv/bin/activate && pip install .",
          "source .venv/bin/activate && pip show workspace"
        ],
        "manifest": {
          "ok": false,
          "required": [
            "numpy",
            "opencv-python"
          ],
          "present": [],
          "missing": [
            "numpy",
            "opencv-python"
          ],
          "used_pyproject": true
        }
      },
      "manifest_ok": false,
      "env_checks": {
        "required": 2,
        "passed": 0,
        "used_venv": true
      },
      "grade_rc": 1,
      "task_duration": 1.57
    },
    {
      "task": "markdown_to_html",
      "passed": false,
      "agent": {
        "rc": 0,
        "dur": 32.9
      },
      "command_checks": {
        "ok": true,
        "score": 4,
        "max": 4,
        "hits": {
          "venv_created": true,
          "installed_in_venv": true,
          "no_global_pip": true,
          "used_tool_commands": true,
          "used_uv_commands": true
        },
        "violations": [],
        "cmds": [
          "pwd && ls -la",
          "uv venv .venv && uv pip install -r pyproject.toml"
        ],
        "manifest": {
          "ok": false,
          "required": [
            "markdown"
          ],
          "present": [],
          "missing": [
            "markdown"
          ],
          "used_pyproject": true
        }
      },
      "manifest_ok": false,
      "env_checks": {
        "required": 1,
        "passed": 0,
        "used_venv": true
      },
      "grade_rc": 1,
      "task_duration": 0.64
    },
    {
      "task": "olympic_data_analysis",
      "passed": true,
      "agent": {
        "rc": 0,
        "dur": 156.14
      },
      "command_checks": {
        "ok": true,
        "score": 4,
        "max": 4,
        "hits": {
          "venv_created": true,
          "installed_in_venv": true,
          "no_global_pip": true,
          "used_tool_commands": true,
          "used_uv_commands": true
        },
        "violations": [],
        "cmds": [
          "pwd && ls -la",
          "ls -la",
          "uv venv",
          "source .venv/bin/activate",
          "uv install -e .",
          "uv venv && source .venv/bin/activate && uv install -e .",
          "uv venv && source .venv/bin/activate && uv pip install -e .",
          "uv venv --clear && source .venv/bin/activate && uv pip install -e .",
          "C-c",
          "rm -rf .venv && uv venv && source .venv/bin/activate && uv pip install -e .",
          "source .venv/bin/activate && pip show olympics-analysis",
          "source .venv/bin/activate && pip list | grep olympics",
          "ls -la",
          "source .venv/bin/activate && streamlit run app.py --server.port 54696 --server.address 0.0.0.0 --server.enableCORS true --server.enableXsrfProtection false",
          "ps aux | grep streamlit"
        ],
        "manifest": {
          "ok": true,
          "required": [
            "pandas",
            "numpy",
            "streamlit",
            "plotly",
            "seaborn",
            "matplotlib"
          ],
          "present": [
            "pandas",
            "numpy",
            "streamlit",
            "plotly",
            "seaborn",
            "matplotlib"
          ],
          "missing": [],
          "used_pyproject": true
        }
      },
      "manifest_ok": true,
      "env_checks": {
        "required": 6,
        "passed": 6,
        "used_venv": true
      },
      "grade_rc": 0,
      "task_duration": 2.8
    },
    {
      "task": "spell_checker",
      "passed": true,
      "agent": {
        "rc": 0,
        "dur": 75.89
      },
      "command_checks": {
        "ok": true,
        "score": 4,
        "max": 4,
        "hits": {
          "venv_created": true,
          "installed_in_venv": true,
          "no_global_pip": true,
          "used_tool_commands": true,
          "used_uv_commands": true
        },
        "violations": [],
        "cmds": [
          "pwd && ls -la",
          "uv sync",
          ".python .venv/bin/python spell_checker.py",
          ".venv/bin/python spell_checker.py"
        ],
        "manifest": {
          "ok": true,
          "required": [
            "textblob"
          ],
          "present": [
            "textblob"
          ],
          "missing": [],
          "used_pyproject": true
        }
      },
      "manifest_ok": true,
      "env_checks": {
        "required": 1,
        "passed": 1,
        "used_venv": true
      },
      "grade_rc": 0,
      "task_duration": 1.37
    },
    {
      "task": "sudoku",
      "passed": false,
      "agent": {
        "rc": 0,
        "dur": 54.99
      },
      "command_checks": {
        "ok": false,
        "score": 2,
        "max": 4,
        "hits": {
          "venv_created": false,
          "installed_in_venv": true,
          "no_global_pip": false,
          "used_tool_commands": true,
          "used_uv_commands": true
        },
        "violations": [
          "No venv creation command (uv venv / python -m venv .venv)",
          "Detected global pip usage (pip install/--user/sudo pip)"
        ],
        "cmds": [
          "ls -la",
          "ls -la pyproject.toml",
          "uv add numpy",
          "pip install -r requirements.txt --target .venv/lib/python3.12/site-packages",
          "python sudoku.py"
        ],
        "manifest": {
          "ok": false,
          "required": [
            "numpy"
          ],
          "present": [],
          "missing": [
            "numpy"
          ],
          "used_pyproject": true
        }
      },
      "manifest_ok": false,
      "env_checks": {
        "required": 1,
        "passed": 1,
        "used_venv": true
      },
      "grade_rc": 0,
      "task_duration": 1.02
    },
    {
      "task": "todo_app",
      "passed": false,
      "agent": {
        "rc": 0,
        "dur": 43.01
      },
      "command_checks": {
        "ok": false,
        "score": 3,
        "max": 4,
        "hits": {
          "venv_created": false,
          "installed_in_venv": true,
          "no_global_pip": true,
          "used_tool_commands": true,
          "used_uv_commands": true
        },
        "violations": [
          "No venv creation command (uv venv / python -m venv .venv)"
        ],
        "cmds": [
          "pwd && ls -la",
          "uv pip install -r requirements.txt --target .venv/lib/python3.12/site-packages",
          "uv pip install flask sqlalchemy werkzeug gunicorn --target .venv/lib/python3.12/site-packages",
          "ls -la .venv/lib/python3.12/site-packages"
        ],
        "manifest": {
          "ok": true,
          "required": [
            "flask"
          ],
          "present": [
            "flask"
          ],
          "missing": [],
          "used_pyproject": true
        }
      },
      "manifest_ok": true,
      "env_checks": {
        "required": 1,
        "passed": 0,
        "used_venv": false
      },
      "grade_rc": 1,
      "task_duration": 0.82
    }
  ]
}